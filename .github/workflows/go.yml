name: Golang Graduation Notification Hub Deployment

on:
  push:
    branches:
      - main
      - github-workflow
  workflow_dispatch:

env:
  IMAGE_NAME: seacloudserver/notification-hub
  CONTAINER_NAME: notification-hub
  PORT: 8089
  ENV_FILE_NAME: .env.notification
  AWS_REGION: us-east-1
  ECR_REPOSITORY: notification-hub
  CLUSTER_NAME: k8s-project

jobs:
  build_notification_hub:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker build and push
        run: |
          # Define the ECR repository URI
          repository_uri="${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}"
          
          # Build the Docker image
          docker build -t $repository_uri -f cmd/httpserver/Dockerfile .

          # Push the Docker image to ECR
          docker push $repository_uri
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Update kube config 
        run: aws eks update-kubeconfig --name $CLUSTER_NAME

      - name: Deploy to EKS 
        run: | 
          kubectl apply -f deployment.yaml 
          kubectl apply -f service.yaml