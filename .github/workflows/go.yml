name: Golang Graduation Notification Hub Deployment

on:
  push:
    branches:
      - main
      - github-workflow
  workflow_dispatch:

env:
  IMAGE_NAME: seacloudserver/notification-hub
  CONTAINER_NAME: notification-hub
  PORT: 8089
  ENV_FILE_NAME: .env.notification
  AWS_REGION: us-east-1
  KUBE_REGION: ap-southeast-1
  ECR_REPOSITORY: notification-hub
  CLUSTER_NAME: k8s-project
  HELM_CHART_REPO: convitnhodev/project-infra
  HELM_CHART_PATH: helm/notification-hub

jobs:
  build_notification_hub:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Checkout Centralized Helm Charts
        uses: actions/checkout@v2
        with:
          repository: convitnhodev/project-infra
          path: centralized-charts
          ref: main  


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker build and push
        run: |
          # Define the ECR repository URI
          repository_uri="${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}"
          
          # Build the Docker image
          docker build -t $repository_uri -f cmd/httpserver/Dockerfile .

          # Push the Docker image to ECR
          docker push $repository_uri
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


      - name: Update kube config 
        run: aws eks update-kubeconfig --name $CLUSTER_NAME --region $KUBE_REGION
  

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: List contents of centralized-charts directory
        run: ls -R centralized-charts

      - name: Update Helm chart values
        run: |
          sed -i "s|image.repository:.*|image.repository: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}|" centralized-charts/${{ env.HELM_CHART_PATH }}/values.yaml
          sed -i "s|image.tag:.*|image.tag: latest|" centralized-charts/${{ env.HELM_CHART_PATH }}/values.yaml
        shell: bash

      - name: Helm dependency update
        run: helm dependency update centralized-charts/${{ env.HELM_CHART_PATH }} 
  
      - name: Helm package
        run: helm package centralized-charts/${{ env.HELM_CHART_PATH }}
  
      - name: Helm upgrade or install
        run: helm upgrade --install notification-hub /home/runner/work/graduation-project-notification-hub/graduation-project-notification-hub/notification-hub-*.tgz --namespace default

      # - name: Deploy to EKS 
      #   run: | 
      #     kubectl apply -f deployment.yaml 
      #     kubectl apply -f service.yaml